<?xml version="1.0" encoding="UTF-8"?>
<project name="deepsea 1.1 APPS" default="build">
    <taskdef name="jshint" classname="JSHintTask" />
    <taskdef name="csslint" classname="CSSLintTask" />

    <target name="build" depends="init,
                                  clean,
                                  verify,
                                  analyze" />

    <target name="verify" depends="init,
                                   clean" />

    <target name="analyze" depends="init,
                                    clean,
                                    jshint" />

    <target name="jshint"
            description="Check js file against jshint"
            depends="list-js">
        <jshint source="${project.logdir}/${jslist.outfile}" output="${project.logdir}/${jshint.outfile}" />
    </target>

    <target name="csslint"
            description="Check css file agains csslint"
            depends="list-css">
        <csslint source="${project.logdir}/${csslist.outfile}" output="${project.logdir}/${csslint.outfile}" />
    </target>

    <target name="check-js-debug"
            description="Check Javascript code for debug statements">
        <phingcall target="check-debug">
            <property name="debug.language" value="Javascript" override="true" />
            <property name="debug.pattern" value="(console\.log\()" override="true" />
            <property name="debug.fileset" value="src.js" />
        </phingcall>
    </target>

    <!-- ### Check a fileset for debug code -->
    <target name="check-debug"
            depends="init">
        <php function="strtolower" returnProperty="debug.language.lower">
            <param value="${debug.language}" />
        </php>
        <property name="debug.output"
                  value="${project.logdir}/debug_${debug.language.lower}.txt"
                  override="true" />
        <delete file="${debug.output}" />
        <append text="" destFile="${debug.output}" />

        <foreach target="check-debug-file" param="filename" absparam="absfilename">
            <fileset refid="${debug.fileset}" />
        </foreach>
        <!-- Break if debug code is detected -->
        <if>
            <not>
                <equals arg1="${debug.lines}" arg2="${debug.lines}" />
            </not>
            <then>
                <fail message="${debug.language} debug code detected:${line.separator} ${debug.lines}" />
            </then>
        </if>
    </target>

    <target name="check-debug-file">
        <echo>Checking file for debug statements: ${absfilename}</echo>
        <loadfile property="debug.lines" file="${absfilename}">
            <filterchain>
                <linecontainsregexp>
                    <regexp pattern="${debug.pattern}" />
                </linecontainsregexp>
            </filterchain>
        </loadfile>
        <if>
            <not>
                <equals arg1="${debug.lines}" arg2="" />
            </not>
            <then>
                <append text="${filename}:${line.separator}
                              ${debug.lines}${line.separator}
                              ${line.separator}"
                        destFile="${debug.output}" />
            </then>
        </if>
    </target>


<!-- List individual lines inside fileset -->
    <target name="list-js" depends="init">
        <property name="fileset-dump-file" value="${project.logdir}/${jslist.outfile}" override="true" />
        <delete file="${fileset-dump-file}" />
        <echo>appsdir: ${project.appsdir}</echo>
        <foreach target="write-to-file" param="filename" absparam="absfilename">
            <fileset refid="src.js" />
        </foreach>
    </target>

    <target name="list-css" depends="init">
        <property name="fileset-dump-file" value="${project.logdir}/${csslist.outfile}" override="true" />
        <delete file="${fileset-dump-file}" />
        <foreach target="write-to-file" param="filename" absparam="absfilename">
            <fileset refid="src.css" />
        </foreach>
    </target>

    <target name="write-to-file">
        <echo file="${fileset-dump-file}" append="true">${absfilename}${line.separator}</echo>
    </target>
    


<!-- ### Internal setup -->
    <target name="init"
            depends="load-properties, setup-dirs, setup-filesets"
            unless="project.initialized">
        <echo msg="call init!" />
        <property name="project.initialized" value="true" />
    </target>

<!-- ### Load properties file -->
    <target name="load-properties">
        <php function="dirname" returnProperty="phing.dir">
            <param value="${phing.file}" />
        </php>

        <property name="project.basedir" value="${phing.dir}" />

        <if>
          <or>
            <not><istrue value="${project.properties.loaded}" /></not>
            <not><isset property="project.properties.loaded" /></not>
          </or>
          <then>
            <echo msg="project.properties has not loaded" />
            <if>
                <available file="${project.basedir}/../build.properties" />
                <then>
                    <resolvepath propertyName="project.basedir"
                                 file="${project.basedir}/../" />
                </then>
            </if>

            <property name="project.properties.file"
                      value="${phing.dir}/build.default.properties" />
            
            <property file="${project.properties.file}" override="true" />

            <available file="${phing.dir}/build.properties"
                       property="project.properties.file"
                       value="${phing.dir}/build.properties" />
            
            <available file="${project.basedir}/build.properties"
                       property="project.properties.file"
                       value="${project.basedir}/build.properties" />

            <property file="${project.properties.file}" override="true"
 />
            <property name="project.properties.loaded" value="true" />
          </then>
        </if>
    </target>


<!-- ### Setup template directories -->
    <target name="setup-dirs" depends="load-properties">
        <if>
          <isset property="apps.make.dir" />
          <then>
            <property name="project.appsdir"
                      value="${project.basedir}/${apps.make.dir}" />
          </then>
          <else>
            <property name="project.appsdir"
                      value="${project.basedir}" />
          </else>
        </if>

        <property name="project.builddir"
                  value="${project.basedir}/build" />
        <property name="project.logdir"
                  value="${project.builddir}/logs" />
    </target>


<!-- ### Delete and create artifact directories -->
    <target name="clean"
            description="Clean up and create artifact directories"
            depends="setup-dirs"
            unless="project.cleaned">
        
        <!-- Delete and recreate directories for artifacts -->
        <delete dir="${project.logdir}" />

        <mkdir dir="${project.logdir}" />

        <!-- Set property to prevent target from being executed multiple times -->
        <property name="project.cleaned" value="true" />
    </target>

<!-- ### Fileset definition -->
    <target name="setup-filesets"
            depends="load-properties">
        
        <!-- Javascript files -->
        <patternset id="js">
            <include name="**/*.js" />
            <exclude name="**/*.min.js" />
        </patternset>
        
        <patternset id="ds-specific">
            <exclude name="common/widget/built/*.*" />
        </patternset>

        <!-- CSS files -->
        <patternset id="css">
            <include name="**/*.css" />
            <exclude name="**/*.min.css" />
        </patternset>
 
        <patternset id="vendor">
            <exclude name="**/vendor/**/*.*" />
        </patternset>

        <patternset id="bootstrap">
            <exclude name="**/bootstrap/**/*.*" />
        </patternset>

        <patternset id="node-modules">
            <exclude name="**/node_modules/**/*.*" />
        </patternset>

        <patternset id="build-dir">
            <exclude name="**/build/**/*.*" />
        </patternset>

        <patternset id="bootstrap-css">
            <exclude name="**/bootstrap*.css" />
        </patternset>

        <patternset id="bootstrap-js">
            <exclude name="**/bootstrap*.js" />
        </patternset>

        
        <fileset id="src.js" dir="${project.appsdir}">
            <patternset refid="js" />
            <patternset refid="vendor" />
            <patternset refid="bootstrap" />
            <patternset refid="node-modules" />
            <patternset refid="build-dir" />
            <patternset refid="bootstrap-js" />
            <patternset refid="ds-specific" />
        </fileset>

        <fileset id="src.css" dir="${project.appsdir}">
            <patternset refid="css" />
            <patternset refid="build-dir" />
            <patternset refid="vendor" />
            <patternset refid="bootstrap" />
            <patternset refid="bootstrap-css" />
        </fileset>
    </target>
</project>
